<?xml version="1.0" encoding="UTF-8"?>
<S-Program name="Predicates" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="S-Emulator-v2.xsd">
	<S-Instructions>
	
		<S-Instruction type="synthetic" name="NEUTRAL">
			<S-Variable>y</S-Variable>
		</S-Instruction>
					
	</S-Instructions>
	<S-Functions>

		<S-Function name="AND" user-string="&amp;&amp;">
			<S-Instructions>
			
				<S-Instruction type="synthetic" name="ZERO_VARIABLE">
					<S-Variable>y</S-Variable>
				</S-Instruction>
	
				<S-Instruction type="synthetic" name="JUMP_ZERO">
					<S-Variable>x1</S-Variable>
					<S-Instruction-Arguments>
						<S-Instruction-Argument name="JZLabel" value="EXIT"/>
					</S-Instruction-Arguments>
				</S-Instruction>
	
				<S-Instruction type="synthetic" name="JUMP_ZERO">
					<S-Variable>x2</S-Variable>
					<S-Instruction-Arguments>
						<S-Instruction-Argument name="JZLabel" value="EXIT"/>
					</S-Instruction-Arguments>
				</S-Instruction>
				
				<S-Instruction type="basic" name="INCREASE">
					<S-Variable>y</S-Variable>
				</S-Instruction>		
			
			</S-Instructions>
		</S-Function>

		<S-Function name="NOT" user-string="!">
			<S-Instructions>
			
				<S-Instruction type="synthetic" name="ZERO_VARIABLE">
					<S-Variable>y</S-Variable>
				</S-Instruction>
				
				<S-Instruction type="basic" name="JUMP_NOT_ZERO">
					<S-Variable>x1</S-Variable>
					<S-Instruction-Arguments>
						<S-Instruction-Argument name="JNZLabel" value="EXIT"/>
					</S-Instruction-Arguments>
				</S-Instruction>
				
				<S-Instruction type="basic" name="INCREASE">
					<S-Variable>y</S-Variable>
				</S-Instruction>		
				
			</S-Instructions>
		</S-Function>

		<S-Function name="EQUAL" user-string="==">
			<S-Instructions>
			
				<S-Instruction type="synthetic" name="QUOTE">
					<S-Variable>y</S-Variable>
					<S-Instruction-Arguments>
						<S-Instruction-Argument name="functionName" value="AND"/>
						<S-Instruction-Argument name="functionArguments" value="(Smaller_Equal_Than,x1,x2),(Smaller_Equal_Than,x2,x1)"/>
					</S-Instruction-Arguments>
				</S-Instruction>
					
			</S-Instructions>
		</S-Function>

		<S-Function name="Smaller_Equal_Than" user-string="&lt;=">
			<S-Instructions>
			
				<S-Instruction type="synthetic" name="QUOTE">
					<S-Variable>y</S-Variable>
					<S-Instruction-Arguments>
						<S-Instruction-Argument name="functionName" value="NOT"/>
						<S-Instruction-Argument name="functionArguments" value="(Minus,x1,x2)"/>
					</S-Instruction-Arguments>
				</S-Instruction>
							
			</S-Instructions>
		</S-Function>

		<S-Function name="Smaller_Than" user-string="&lt;">
			<S-Instructions>
			
				<S-Instruction type="synthetic" name="QUOTE">
					<S-Variable>y</S-Variable>
					<S-Instruction-Arguments>
						<S-Instruction-Argument name="functionName" value="AND"/>
						<S-Instruction-Argument name="functionArguments" value="(Smaller_Equal_Than,x1,x2),(NOT,(EQUAL,x2,x1))"/>
					</S-Instruction-Arguments>
				</S-Instruction>
							
			</S-Instructions>
		</S-Function>

	</S-Functions>
</S-Program>
